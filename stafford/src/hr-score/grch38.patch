diff --git a/40364_2015_33_add9.r b/40364_2015_33_add9.r
index b5bd9fd..7ed8a89 100644
--- a/40364_2015_33_add9.r
+++ b/40364_2015_33_add9.r
@@ -21,7 +21,6 @@
 # 9: ploidy
 # 10: contamination, aberrant cell fraction
 
-chrominfo <- GetChrominfo() # hg19
 
 # chrominfo is a 5 column matrix with information about the chromosomes:
 # 1: chromosome number (23 = X, 24 = Y)
@@ -30,9 +29,6 @@ chrominfo <- GetChrominfo() # hg19
 # 4: centromere start
 # 5: centromere end
 
-ntai <- calc.ai(x, chrominfo)
-lst <- calc.lst(x, chrominfo)
-hrd <- calc.hrd(x)      # Throughout this text, "hrd" refers to "HRD-LOH"
 
 
 
@@ -142,7 +138,7 @@ calc.ai <- function(
         sample.seg[sample.seg[,2] %in% i,'AI'] <-sample.chrom.seg[,'AI']
       }
       # By logical, we assume that chrominfo == FALSE, hence we here proceed without checking for the centromere (useful for non-human samples)
-      if(class(chrominfo) == 'logical'){      
+      if(F){
         if(sample.chrom.seg[1,'AI'] == 2 & nrow(sample.chrom.seg) != 1){
           sample.seg[sample.seg[,2]==i,'AI'][1] <- 1
         }
@@ -150,7 +146,7 @@ calc.ai <- function(
           sample.seg[sample.seg[,2]==i,'AI'][nrow(sample.seg[sample.seg[,2]==i,])] <- 1
         }
       }
-      if(class(chrominfo) != 'logical'){    # Here we consider the centromere    
+      if(T){    # Here we consider the centromere
         if(sample.chrom.seg[1,'AI'] == 2 & nrow(sample.chrom.seg) != 1 & sample.chrom.seg[1,4] < (chrominfo[i,3])){
           sample.seg[sample.seg[,2]==i,'AI'][1] <- 1
         }
@@ -250,8 +246,10 @@ calc.lst <- function(
         p.arm <- sample.chrom.seg.new[sample.chrom.seg.new[,3] <= chrominfo[i,4],] 
         q.arm <- sample.chrom.seg.new[sample.chrom.seg.new[,4] >= chrominfo[i,5],]
         q.arm<- shrink.seg.ai(q.arm)
-        p.arm<- shrink.seg.ai(p.arm)
-        p.arm[nrow(p.arm),4] <- chrominfo[i,4]
+        if(nrow(p.arm > 0)){
+            p.arm<- shrink.seg.ai(p.arm)
+            p.arm[nrow(p.arm),4] <- chrominfo[i,4]
+        }
         q.arm[1,3] <- chrominfo[i,5]
       }
       if(chr.arm != 'no'){
@@ -453,21 +451,23 @@ shrink.seg.ai <- function(chr.seg)  {
 
 GetGzFromUrl <- function(url, ...) {
   # http://stackoverflow.com/questions/9548630/read-gzipped-csv-directly-from-a-url-in-r
-  con <- gzcon(url(url))
+  con <- gzfile(url, "r")
   txt <- readLines(con)
-  dat <- read.delim(textConnection(txt), ...)  
+  dat <- read.delim(textConnection(txt), ...)
+  close(con)
   return(dat)
 }
 
+library(data.table)
+
 GetChrominfo <- function() {
   # Get chromInfo table from UCSC
-  chrom <- GetGzFromUrl("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/chromInfo.txt.gz", header = FALSE)
+  chrom <- GetGzFromUrl("@chromInfo@", header = FALSE)
   chrom <- subset(chrom, grepl("^chr[0-9XY]{1,2}$", chrom[,1]))
-  # Get gap table from UCSC
-  gaps <- GetGzFromUrl("http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/gap.txt.gz", header = FALSE)
-  centro <- subset(gaps, gaps[,8] == "centromere")
+  # Get centromere table from UCSC
+  centro <- as.data.table(GetGzFromUrl("@centromeres@", header = FALSE))
   # Merge the relevant info from the two tables
-  chrominfo <- merge(chrom[,1:2], centro[,2:4], by.x = 1, by.y = 1) # merge size and centromere location
+  chrominfo <- merge(chrom[,1:2], centro[,.(min(V3),max(V4)),by=V2], by.x = 1, by.y = 1) # merge size and centromere location
   chrominfo$centromere <- rowMeans(chrominfo[,3:4]) # convert centromere start and end into one location (the mean)
   chrominfo <- chrominfo[,c(1,2,5,3,4)] # keep chromosome, size and centromere location
   colnames(chrominfo) <- c("chr", "size", "centromere", "centstart", "centend")
